apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "airflow-monitor.fullname" . }}
  labels:
    {{- include "airflow-monitor.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "airflow-monitor.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "airflow-monitor.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "airflow-monitor.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
        - name: vault-cert-staging
          secret:
            secretName: {{ include "airflow-monitor.fullname" . }}-cert-staging
        - name: vault-cert-prod
          secret:
            secretName: {{ include "airflow-monitor.fullname" . }}-cert-prod
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 5000
              protocol: TCP
          volumeMounts:
            - name: vault-cert-staging
              mountPath: "/app/certs/staging"
              readOnly: true
            - name: vault-cert-prod
              mountPath: "/app/certs/prod"
              readOnly: true
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: FLASK_APP
              value: "airflow_monitor/app.py"
            - name: PYTHONUNBUFFERED
              value: "1"
            - name: VAULT_STAGING_CERT_PATH
              value: "/app/certs/staging/tls.crt"
            - name: VAULT_STAGING_KEY_PATH
              value: "/app/certs/staging/tls.key"
            - name: VAULT_PROD_CERT_PATH
              value: "/app/certs/prod/tls.crt"
            - name: VAULT_PROD_KEY_PATH
              value: "/app/certs/prod/tls.key"
            - name: VAULT_STAGING_NAMESPACE
              value: {{ .Values.vault.staging.namespace | quote }}
            - name: VAULT_PROD_NAMESPACE
              value: {{ .Values.vault.prod.namespace | quote }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }} 